
-- Create the gallery table to store media uploads
CREATE TABLE IF NOT EXISTS public.gallery (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    url text NOT NULL,
    path text,
    type text NOT NULL,
    alt_text text,
    purpose text,
    CONSTRAINT gallery_pkey PRIMARY KEY (id)
);

ALTER TABLE public.gallery ENABLE ROW LEVEL SECURITY;

-- Create policy to allow public read access to all media
CREATE POLICY "Allow public read access" ON public.gallery
    FOR SELECT
    USING (true);

-- Create policy to allow authenticated users to insert/update/delete their own media
CREATE POLICY "Allow authenticated users to manage media" ON public.gallery
    FOR ALL
    USING (auth.role() = 'authenticated')
    WITH CHECK (auth.role() = 'authenticated');


-- Create the payments table to store M-Pesa transaction data
CREATE TABLE IF NOT EXISTS public.payments (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    merchant_request_id text,
    checkout_request_id text,
    result_code integer,
    result_desc text,
    amount numeric,
    mpesa_receipt_number text,
    transaction_date timestamp with time zone,
    phone_number text,
    raw_payload jsonb,
    CONSTRAINT payments_pkey PRIMARY KEY (id),
    CONSTRAINT payments_checkout_request_id_key UNIQUE (checkout_request_id),
    CONSTRAINT payments_merchant_request_id_key UNIQUE (merchant_request_id)
);

ALTER TABLE public.payments ENABLE ROW LEVEL SECURITY;

-- Create policy to allow service_role to insert payment data (from Edge Function)
CREATE POLICY "Allow service_role to insert payments" ON public.payments
    FOR INSERT
    WITH CHECK (auth.role() = 'service_role');

-- Create policy to allow authenticated users (admins) to read payments
CREATE POLICY "Allow admins to read payments" ON public.payments
    FOR SELECT
    USING (auth.role() = 'authenticated');
